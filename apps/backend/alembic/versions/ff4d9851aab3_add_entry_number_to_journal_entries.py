"""add_entry_number_to_journal_entries

Revision ID: ff4d9851aab3
Revises: 2d1979aafcaf
Create Date: 2025-07-12 20:05:11.721712

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "ff4d9851aab3"
down_revision: Union[str, None] = "2d1979aafcaf"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Step 1: Add the column as nullable first
    op.add_column(
        "journal_entries", sa.Column("entry_number", sa.Integer(), nullable=True)
    )

    # Step 2: Backfill the data using a window function
    op.execute(
        """
        WITH ranked_entries AS (
            SELECT 
                id,
                ROW_NUMBER() OVER(PARTITION BY user_id ORDER BY created_at) as rn
            FROM journal_entries
        )
        UPDATE journal_entries
        SET entry_number = ranked_entries.rn
        FROM ranked_entries
        WHERE journal_entries.id = ranked_entries.id;
    """
    )

    # Step 3: Now that all rows have a value, alter the column to be non-nullable
    op.alter_column("journal_entries", "entry_number", nullable=False)

    op.alter_column(
        "journal_entries",
        "title",
        existing_type=sa.TEXT(),
        type_=sa.String(),
        existing_nullable=True,
    )
    op.alter_column(
        "journal_entries",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
        existing_nullable=True,
    )
    op.create_unique_constraint(
        "uq_user_entry_number", "journal_entries", ["user_id", "entry_number"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("uq_user_entry_number", "journal_entries", type_="unique")
    op.alter_column(
        "journal_entries",
        "created_at",
        existing_type=sa.DateTime(),
        type_=postgresql.TIMESTAMP(timezone=True),
        existing_nullable=True,
    )
    op.alter_column(
        "journal_entries",
        "title",
        existing_type=sa.String(),
        type_=sa.TEXT(),
        existing_nullable=True,
    )
    op.drop_column("journal_entries", "entry_number")
    # ### end Alembic commands ###
