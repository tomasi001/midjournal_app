services:
  backend:
    build:
      context: ./apps/backend
      dockerfile: src/api/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./apps/backend/src:/app/src
    environment:
      - DATABASE_URL=postgresql://youruser:yourpassword@db/yourdb
      - QDRANT_URL=http://qdrant:6333
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/%2F
      - OLLAMA_HOST=http://ollama:11434
    depends_on:
      db:
        condition: service_healthy
      qdrant:
        condition: service_started
      rabbitmq:
        condition: service_started
      ollama:
        condition: service_started

  ingestion-worker:
    build:
      context: ./apps/backend
      dockerfile: src/api/Dockerfile
    volumes:
      - ./apps/backend/src:/app/src
    environment:
      - DATABASE_URL=postgresql://youruser:yourpassword@db/yourdb
      - QDRANT_URL=http://qdrant:6333
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/%2F
    command: ["python", "-u", "src/ingestion/consumer.py"]
    depends_on:
      db:
        condition: service_healthy
      qdrant:
        condition: service_started
      rabbitmq:
        condition: service_started

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: yourdb
      POSTGRES_USER: youruser
      POSTGRES_PASSWORD: yourpassword
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./apps/backend/db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U youruser -d yourdb"]
      interval: 5s
      timeout: 5s
      retries: 5

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:6333/healthz"]
      interval: 5s
      timeout: 2s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:11434/api/tags"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_data:
  qdrant_data:
  rabbitmq_data:
  ollama_data:
